from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from config import subscribed_users, user_cities
from routers.weatherRouters import FSMChooseCity

router = Router()


@router.message(Command("subscribe"))
async def cmd_subscribe(message: types.Message, state: FSMContext) -> None:
    user_id = message.from_user.id
    
    if user_id in subscribed_users:
        await message.answer("‚ÑπÔ∏è –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.")
        return
    
    await message.answer(
        "üìù –î–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞:",
        reply_markup=types.ReplyKeyboardRemove()
    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
    await state.set_state(FSMChooseCity.city_choice_state)
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
    await state.update_data(subscribing=True)


@router.message(Command("unsubscribe"))  
async def cmd_unsubscribe(message: types.Message) -> None:
    user_id = message.from_user.id
    
    if user_id in subscribed_users:
        subscribed_users.discard(user_id)
        if user_id in user_cities:
            del user_cities[user_id]
        await message.answer("‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–≥–æ–¥—ã.")
    else:
        await message.answer("‚ÑπÔ∏è –í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.")
